{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","useState","isEditing","setEditing","newName","setNewName","editFiedldRef","useRef","editButtonRef","wasEditing","value","ref","useEffect","current","usePrevious","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Form","setName","addTask","autoComplete","FilterButton","isPressed","setFilter","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","filter","tasks","setTasks","updatedTasks","map","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","newTask","nanoid","tabIndex","role","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.27a60696.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n\r\n\r\n  const [isEditing, setEditing] = useState(false);\r\n\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFiedldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange} ref={editFiedldRef} />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)} ref={editButtonRef} >\r\n          Edit <span className=\"visually-hidden\">{props.name}</span>\r\n        </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n  \r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFiedldRef.current.focus();\r\n    } \r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  },[wasEditing, isEditing]);\r\n\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\n\r\nfunction Form(props) {\r\n\r\n  const [name, setName] = useState('add something');\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n    return (\r\n      <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={props.isPressed}\r\n        onClick={() => props.setFilter(props.name)}\r\n      >\r\n        <span className=\"visually-hidden\">Show </span>\r\n        <span>{props.name}</span>\r\n        <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import Todo from \"./components/Todo\";\r\nimport Form from \"./components/Form\";\r\nimport FilterButton from \"./components/FilterButton\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { nanoid } from \"nanoid\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n// Since we're now utilizing usePrevious() in two files, a good efficiency refactor would be to move the usePrevious() function into its own file, export it from that file, and import it where you need it. Try doing this as an exercise once you've got to the end.\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\nfunction App(props) {\r\n\r\n  const [filter, setFilter] = useState('All');\r\n\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map(task => {\r\n      if (id === task.id) {\r\n        return { ...task, completed: !task.completed }\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map(task => {\r\n      if (id === task.id) {\r\n        return { ...task, name: newName }\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n\r\n  const taskList = tasks\r\n    .filter(FILTER_MAP[filter])\r\n    .map(task => (\r\n      <Todo\r\n        id={task.id}\r\n        name={task.name}\r\n        completed={task.completed}\r\n        key={task.id}\r\n        toggleTaskCompleted={toggleTaskCompleted}\r\n        deleteTask={deleteTask}\r\n        editTask={editTask}\r\n      />\r\n    ));\r\n\r\n\r\n  const filterList = FILTER_NAMES.map(name => (\r\n    <FilterButton\r\n      key={name}\r\n      name={name}\r\n      isPressed={name === filter}\r\n      setFilter={setFilter}\r\n    />\r\n  ));\r\n\r\n\r\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n  const listHeadingRef = useRef(null);\r\n\r\n  const prevTaskLength = usePrevious(tasks.length);\r\n\r\n  useEffect(() => {\r\n    if (tasks.length - prevTaskLength === -1) {\r\n      listHeadingRef.current.focus();\r\n    }\r\n  },[tasks.length, prevTaskLength]);\r\n  \r\n  return (\r\n    <div className=\"todoapp stack-large\">\r\n      <h1>TodoMatic</h1>\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n        {headingText}\r\n      </h2>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst DATA = [\r\n  { id: \"todo-0\", name: \"Eat\", completed: true },\r\n  { id: \"todo-1\", name: \"Sleep\", completed: false },\r\n  { id: \"todo-2\", name: \"Repeat\", completed: false }\r\n]\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App tasks={DATA}/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}